---
- name: Postgres DB Config with optimization
  hosts: all
  become: true
  tasks:
    - name: Update package cache (RedHat)
      dnf:
        update_cache: yes

    - name: Install PostgreSQL repository (RedHat)
      command: "sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm"

    - name: Disable PostgreSQL module (RedHat)
      command: "sudo dnf -qy module disable postgresql"

    - name: Install PostgreSQL 14 server (RedHat)
      dnf:
        name: "postgresql14-server"
        state: present

    - name: Initialize PostgreSQL 14 database
      command: "sudo /usr/pgsql-14/bin/postgresql-14-setup initdb"

    - name: Enable PostgreSQL 14 service
      systemd:
        name: "postgresql-14"
        enabled: yes

    - name: Start PostgreSQL 14 service
      systemd:
        name: "postgresql-14"
        state: stopped
    - name: Wait for 10 seconds
      pause:
        seconds: 10
    - name: Remove existing shared memory blocks
      shell: ipcs -m | grep postgres | awk '{print $2}' | xargs ipcrm -m
      ignore_errors: true
    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /var/lib/pgsql/14/log
        - /var/lib/pgsql/14/backups
    - name: Give permissions
      file:
        path: "{{ item }}"
        owner: postgres
        group: postgres
        recurse: yes
      loop:
        - /var/lib/pgsql
        - /var/tmp/
    - name: Insert environment variables
      copy:
        content: |
          PGDATA=/var/lib/pgsql/14/data
          export PGDATA
          PATH=$PATH:$HOME:/usr/bin:/usr/local/bin
          export PATH
          LD_LIBRARY_PATH=/usr/bin/
          export LD_LIBRARY_PATH
        dest: /var/lib/pgsql/.bash_profile

    - name: Source .bash_profile
      command:
        cmd: su - postgres -c "source /var/lib/pqsql/.bash_profile"

    - name: Remove old files
      shell: rm -rf /var/lib/pqsql/14/data/*

    - name: Stop PostgreSQL if already running
      become: true
      shell: sudo kill $(cat /var/lib/pgsql/14/data/postmaster.pid)
      ignore_errors: true

    - name: Wait for 30 seconds
      pause:
        seconds: 30

    - name: Initialize DB
      command:
        cmd: su - postgres -c "initdb -D $PGDATA"
      register: init_db_status

    - name: Display status
      debug:
        var: init_db_status.stdout_lines

    - name: Insert to /etc/sysctl.conf file
      lineinfile:
        line: vm.nr_hugepages = 5760
        dest: /etc/sysctl.conf
        insertafter: EOF 

    - name: Update max_connections in postgresql.conf
      ansible.builtin.lineinfile:
        path: /var/lib/pgsql/14/data/postgresql.conf
        regexp: "^max_connections = "
        line: max_connections = 256

    - name: Update shared_buffer in postgresql.conf
      ansible.builtin.lineinfile:
        path: /var/lib/postgresql/14/data/postgresql.conf
        regexp: "^shared_buffers = "
        line: shared_buffers = 4096MB
      notify: Reload PostgreSQL

    - name: Edit postgres.conf
      lineinfile:
        line: |
          listen_addresses= 'localhost'
          port = 5432 
          huge_pages = on
          temp_buffers = 512MB
          work_mem = 512MB
          maintenance_work_mem = 256MB
          autovacuum_work_mem = -1
          max_stack_depth = 5MB
          max_files_per_process = 4000
          effective_io_concurrency = 32
          wal_level = minimal
          synchronous_commit = off
          wal_buffers = 512MB
          checkpoint_timeout = 1h
          checkpoint_completion_target = 1
          checkpoint_warning = 0
          max_wal_senders = 0
          log_destination = 'stderr'
          logging_collector = on
          log_directory = 'log'
          log_filename = 'postgresql-%a.log'
          log_truncate_on_rotation = on
          log_rotation_age = 1d
          log_rotation_size = 0
          log_min_messages = error
          log_min_error_statement = error
          log_line_prefix = '%m [%p] '
          max_locks_per_transaction = 64
          max_pred_locks_per_transaction = 64
          external_pid_file = '/var/run/postgresql/14-main.pid'
          unix_socket_directories = '/var/run/postgresql'
          stats_temp_directory = '/var/run/postgresql/14-main.pg_stat_tmp'
        dest: /var/lib/pgsql/14/data/postgresql.conf
        insertafter: "#port = 5432                            # (change requires restart)"

    - name: Stop PostgreSQL if already running
      become: true
      shell: sudo kill $(cat /var/lib/pgsql/14/data/postmaster.pid)
      ignore_errors: true

  handlers:
    - name: Reload PostgreSQL
      ansible.builtin.service:
        name: postgresql
        state: reloaded
